plugins {
    // Add support for Java (for creating jars).
    id 'java'

    // Add support for Scala.
    id 'scala'

    // Enables the use of ScalaTest in a Gradle Scala project.
    id 'com.github.maiflai.scalatest' version "0.26"

    // For collapsing all dependencies and project code into a single Jar file.
    id "com.github.johnrengelman.shadow" version "5.2.0"

    // Add support for IntelliJ IDEA.
    id 'idea'
}

ext {
    scalaMajorVersion = '2.12'
    scalaVersion = '2.12.10'
    scalaTestVersion = '3.1.0'
    scalaLoggingVersion = '3.5.0'
    kafkaVersion = '2.4.0'
    zeromqVersion = '0.4.0'
    slf4jVersion = '1.7.30'
    mockitoVersion = '1.0.0-M2'
}

dependencies {
    implementation group: 'org.scala-lang', name: 'scala-library', version: scalaVersion
    implementation group: 'com.typesafe.scala-logging', name: "scala-logging_$scalaMajorVersion", version: scalaLoggingVersion
    implementation group: 'org.apache.kafka', name: 'connect-api', version: kafkaVersion
    implementation group: 'org.zeromq', name: 'jeromq', version: zeromqVersion
    testImplementation group: 'org.scalatest', name: "scalatest_$scalaMajorVersion", version: scalaTestVersion
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion
    testImplementation group: 'org.scalatestplus', name: "scalatestplus-mockito_$scalaMajorVersion", version: mockitoVersion
    testImplementation group: 'com.vladsch.flexmark', name: 'flexmark-all', version: '0.35.10' // required by scalatest (only version 0.35.10)
    testRuntimeOnly 'org.pegdown:pegdown:1.4.2' // required by com.github.maiflai.scalatest
    testRuntimeOnly "org.slf4j:slf4j-log4j12:$slf4jVersion"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()

    mavenLocal()
    mavenCentral()
    maven { url "https://packages.confluent.io/maven/" }
    maven { url "https://repo.typesafe.com/typesafe/releases/" }
}

shadowJar {
    dependsOn test
}

configurations.all {
    // for error "SLF4J: Class path contains multiple SLF4J bindings."
    exclude module: 'slf4j-log4j12'
}

test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
}