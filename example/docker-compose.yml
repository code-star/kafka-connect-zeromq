---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "32181:32181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker-0:
    image: confluentinc/cp-kafka:5.4.0
    hostname: kafka-broker-0
    container_name: kafka-broker-0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:32181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-0:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-setup:
    image: confluentinc/cp-kafka:5.4.0
    hostname: kafka-setup
    container_name: my-kafka-setup
    depends_on:
      - kafka-broker-0
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                         cub kafka-ready -z zookeeper:32181 1 30 && \
                         kafka-topics --create --if-not-exists --zookeeper zookeeper:32181 --partitions 1 --replication-factor 1 --topic connect-config-storage && \
                         kafka-topics --create --if-not-exists --zookeeper zookeeper:32181 --partitions 1 --replication-factor 1 --topic connect-offset-storage && \
                         kafka-topics --create --if-not-exists --zookeeper zookeeper:32181 --partitions 1 --replication-factor 1 --topic connect-status-storage && \
                         kafka-topics --create --if-not-exists --zookeeper zookeeper:32181 --partitions 1 --replication-factor 1 --topic kafka-topic-1'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
      CUB_CLASSPATH: "/etc/confluent/docker/docker-utils.jar"

  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka-broker-0
    ports:
      - "8091:8091"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:32181'

  kafka-rest-api:
    image: confluentinc/cp-kafka-rest:5.4.0
    hostname: kafka-rest-api
    container_name: kafka-rest-api
    depends_on:
      - schema-registry
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper:32181'
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8082'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8091'
      KAFKA_REST_HOST_NAME: 'localhost'

  connect:
    image: codestar/kafka-connect-zeromq:0.1
    build:
      context: .
    volumes:
      - ../build/libs:/etc/kafka-connect/jars
    hostname: connect
    container_name: connect
    depends_on:
      - zookeeper
      - kafka-broker-0
      - kafka-setup
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:32181'
      CONNECT_BOOTSTRAP_SERVERS: 'kafka-broker-0:19092'
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_REST_HOST_NAME: "connect"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "compose-connect-group"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-config-storage"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offset-storage"
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status-storage"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/etc/kafka-connect/jars"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.4.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - kafka-broker-0
      - schema-registry
      - connect
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka-broker-0:19092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:32181'
      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8091"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      PORT: 9021
